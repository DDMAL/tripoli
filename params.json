{
  "name": "Tripoli",
  "tagline": "IIIF document validation with correction.",
  "body": "Tripoli is a validator for documents conforming to the [IIIF presentation API 2.1](http://iiif.io/api/presentation/2.1/). It makes it easy to validate documents, apply provider specific heuristics, and even correct documents while they are being validated.\r\n\r\n###Documentation\r\nDetailed documentation is available at http://tripoli.readthedocs.io/en/latest/\r\n\r\n###Installation\r\nYou can install Tripoli using pip.\r\n```bash\r\n> pip install tripoli\r\n```\r\n\r\n###Quick start\r\nOnce installed, it's easy to start validating. Tripoli can validate the entire document, and will log informative errors and warnings with helpful paths.\r\n```python\r\n>>> from tripoli import IIIFValidator\r\n\r\n>>> iv = IIIFValidator()\r\n>>> iv.validate(some_manifest)\r\n    Error: Field has no '@language' key where one is required. @ data['metadata']['value']\r\n    Error: viewingHint 'pages' is not valid and not uri. @ data['sequences']['canvases']['viewingHint']\r\n    Warning: logo SHOULD be IIIF image service. @ data['logo']\r\n    Warning: manifest SHOULD have thumbnail field. @ data['thumbnail']\r\n    Warning: Unknown key 'see_also' in 'manifest' @ data['see_also']\r\n    Warning: ImageResource SHOULD have @id field. @ data['sequences']['canvases']['images']['@id']\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}